function plot_box_regions(ibox,lat,lon,opt)
%
% A function that plots the cooridinate points generated by
% locations.m on a Miller projected world map. 
%
% As in plot_map_miller.m, the grid is centered on 0 longitude.
% 
% INPUT:				....
%							
% ====================================================================

  % General aesthetic options
  frame_thick = 1.75;
  frame_color = [0,0,0];
  box_color = [0.7,0,0];
  output_size = [20,10];

  if iscell(opt)
    ext = opt{1};
    opt_text = opt{2};
  else
    ext = opt;
    opt_text = 'dry1-2';
  end
  
  % name for output 
  switch opt_text 
    case 'dry1-2' 
      name = 'box_regions_dry1-2';
    case 'dry-wet'
      name = 'box_regions_dry-wet';
  end

% ----------------------------------------------------------------------
  
  % Number of box regions
  Nbox = size(ibox,1);

  % Disable X term output, transparent background.
	close;

  if strcmp(ext,'.png') || strcmp(ext,'both')
    FIG = figure('visible','off');
  elseif strcmp(ext,'.eps')
    FIG = figure('visible','off', ... 
                 'color','none', ...
                 'InvertHardcopy','off');
  end

	% select projection type  (same as in plot_map_miller.m)
	m_proj('miller', ...
         'lat',[-55,77], ...
         'long',[lon(1)-180,lon(end)-180]);		

	% remove grid, thicker box
	m_grid('xtick',[],'ytick',[], ...
         'linewidth',frame_thick, ...
         'color',frame_color, ...
         'box','fancy'); 

	% add grid, thicker box and ticks
	m_grid('linewidth',frame_thick, ...
         'color',frame_color, ...
         'box','fancy', ...
         'fontsize',12, ...
         'fontweigth','b'); 

  % -) draw coast lines 
	m_coast('color',[0 0 0],'linewidth',0.75);
		
  hold on

  % loop through the individual box regions
  for i=1:Nbox

    % squeeze the ith box
    ibox1 = sqz(ibox(i,:));  
    
    % bounding longitudes, latitudes points
    % must add a 5th corner to complete circuit
    box_lon = ...
      [lon(ibox1(1)),lon(ibox1(3)), ... 
       lon(ibox1(3)),lon(ibox1(1)),lon(ibox1(1))];
    box_lat = ...
      [lat(ibox1(2)),lat(ibox1(2)), ...
       lat(ibox1(4)),lat(ibox1(4)),lat(ibox1(2))];

    % shift longitudes by 360 degrees to match grid
    if box_lon(1) > 180;
      box_lon = box_lon-360;
    end

%    box_lon
%    box_lat
  
    % draw box and hatch
    m_line(box_lon,box_lat, ...
           'linewi',1.5,'color',box_color);     
    m_hatch(box_lon,box_lat, ...
            'single',30,5,'linewi',1.2,'color','k'); 
		
    % add box number
    switch opt_text
      case 'dry1-2';
        add_text = ['Box ',num2str(i)];
        xshift = -25;
        yshift = 4;
      case 'dry-wet';
        if i==1;
          add_text = ['Box',char(10),' dry'];
        elseif i==2;
          add_text = ['Box',char(10),' wet'];
        end
        xshift = -19;
        yshift = 10;
      otherwise
        disp('Unsupported input option')
        return
      end

    m_text(box_lon(1)+xshift,box_lat(1)+yshift, ...
           add_text, ...
           'color',box_color, ...
           'fontweight','b');
    
  end
		
  % -) select output figure size
  h_fig = gcf;
  set(h_fig,'paperunits','centimeters', ...
            'paperpositionmode','manual');
  set(h_fig,'papersize',output_size);
  set(h_fig,'paperposition',[0,0,output_size]);

  % printing ouptut using plot_print.m (as a .png & .eps)
  switch ext
    case '.png';
      opt_print_no_name=0;
      plot_print; 
      close(FIG);
    case '.eps'; 
      load('global.mat','model_name');
      name = [model_name,'_',name];
      plot_print_eps; 
      close(FIG);
    case 'both'; 
      opt_print_no_name=0;
      plot_print;
      plot_box_regions(ibox,lat,lon,{'.eps',opt_text});
  end

end
