%%% Procedure which facilitates the plotting of timeseries of all
	%	locations generated by locations.m.
	% 
	% plot_ts.m and plot_hist.m are called successively 
	% for the a particular variable at all $Nlocs locations.
% ======================================================================

% $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
%% Run startup.m, locations.m and DO NOT clear variables
%%
%% Requires: 
%%	Z (Ntime x Nlat x Nlon). This works for anomalies too.
%%	Zbar (Nmonth x Nlat x Nlon). Set as [] if not wanted on plot.
%%	sig_Z (Nmonth x Nlat x Nlon). Set as [] if not wanted on plot.
%%	cols, line color ... UNDER CONSTRUCTION !!!
%%	tsvals, timeseries yaxis ($Nlocs x 2) or (1 x 2).
%%	yvals, height the yaxis for plot_hist.m ($Nlocs x 1) or (1 x 1).
%%	name, string for output file.
% $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$


for il=1:Nlocs		% looping through the locations
	
		% squeezing ilocs location $il
	ilon = ilocs(il,1);
	ilat = ilocs(il,2);		

		% squeezing Z at location $il
	z = sqz(Z(:,ilat,ilon));
	
		% if non-empty, squeezing Zbar at locations $il
	if ~isempty(Zbar)
		zbar = sqz(Zbar(:,ilat,ilon));
	else
		zbar = [];
	end
		
		% if non-empty, squeezing sig_Z at locations $il
	if ~isempty(sig_Z)
		sig_z = sqz(sig_Z(:,ilat,ilon));
	else
		sig_z = [];
	end

%		% in case some grid point blew up		--- Do I need this ?
%	nogood = find(z>1e2); z(nogood) = NaN;

		% output name for location $il
	if il<10
		name1 = ['0' num2str(il) '_' name];
	else
		name1 = [num2str(il) '_' name];
	end
	
		%% add if cols is an array
	col = cols;

		% if tsvals is a vector, squeeze at entry $il
	if size(tsvals,1)>1
		tsval = sqz(tsvals(il,:));
	else
		tsval = tsvals;
	end
		
		% if yvals is a vector, squeeze at entry $il
	if length(yvals)>1
		yval = sqz(yvals(il));
	else
		yval = yvals;
	end

		% setting the bins for plot_hist.m
		% Maybe use tsvals instead of min(z) and max(z)
	bins = linspace(min(z),max(z),Ntime);

		%% Call plot_ts.m
	plot_ts(z,zbar,sig_z,col,name1,tsval);

		%% Call plot_hist.m		(with an empty xlab)
	plot_hist(z,bins,Ntime,'',['ts' name1],yval);
	
end; 

clear z zbar sig_z name1 bins col tsval yval
clear Z Zbar sig_Z name
% ======================================================================
