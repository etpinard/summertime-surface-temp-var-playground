% $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
%% Run startup.m and DO NOT clear variables
% $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
%
% comp_Hs_gain.m
%
% --> plot_comp_datasets.m <--
%
% ** Very important in the argument for the Hs parametrization **
%
% Cross-datasets comparison of performance gain by the (T' then m') 
% parameterization over the (m' then F').
%
% Performance is quantified the normalized calibration RMS (T'_tm - T')
%
% ======================================================================

%name_add = '';
out_format = 'both';
opt_overlay = 0;
opt_frame_col = 0;

cvec = [-0.4:0.1:0.4];
opt_x_cvec = '[]';
units = '[-]';
color_handle = @color_corr;

% regression command
regrs_cmd = [ ...
'[a_m,tmp1] = regrs(HsHs,mm);' ...
'b_mF = regrs(tmp1,FF);' ...
]; % tmbld_Hs_Tm will use 'tm_param_full' params 

% error commands
cmd_err_mF = [ ...
'den = gamma_lw;' ...
'x = xmonth(1./den).*(' ...
'  FF - L*EE' ...
'- xmonth(a_m).*mm - xmonth(b_mF).*FF' ...
'- xiUxiU - Flu0Flu0);' ...
];

cmd_err_Tm = [ ...
'den = gamma-gamma_G;' ...
'x = xmonth(1./den).*(' ...
'  FF - L*EE' ...
'- xmonth(-L*nu_Hs).*mm' ...
'- xiUxiU - Flu0Flu0);' ...
];

comp_cmd = [ ...
'gamma = [];' ...
'beta = [];' ...
'alpha = [];' ...
,regrs_cmd, ...
'tm_param_full;' ...
,cmd_err_mF, ...
'Den = sqrt(sqmean(Var_T));' ...
'tmbld_Hs_mF = rms(x,TT)./Den;' ...
,cmd_err_Tm, ...
'tmbld_Hs_Tm = rms(x,TT)./Den;' ...
'gain_Hs_Tm_mF = tmbld_Hs_Tm-tmbld_Hs_mF;' ...
];

vars_req = {'lon','lat', ...
            'gain_Hs_Tm_mF'};
% ----------------------------------------------------------------------

%% Call plot_comp_datasets.m

plot_comp_datasets;
% ----------------------------------------------------------------------
