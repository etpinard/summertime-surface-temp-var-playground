% $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
%% Run startup.m and DO NOT clear variables
% $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
%
% plot_Hs_tmbld.m
%
% --> plot_4panels.m <--
%
% Toy model calibration errors on Var(T) 
% after the 'building' of the Hs' parameterization 
%
% - with (m',F') , (F',m') , (m',T') , (T',m')
% 
% on a 4 panel plot, 1 dataset at a time.
%
% ======================================================================

%%% Plot all data sets or just one
opt_plot_all_datasets = 0;
dataset1 = 'hadgem1';
% ----------------------------------------------------------------------

%%% Choose metric: calibration ratio or calibration RMS
%name = 'Hs_tmbld';
name = 'Hs_tmbld_rms';
% ----------------------------------------------------------------------

out_format = 'both';
opt_frame_col = 0;
opt_overlay = 0;     

opt_x_cvec = 'above';
if strcmp(name,'Hs_tmbld')
  cvec = [0,0.25,0.5,0.8,0.9,1,1.1,1.25,2,4];   
  color_handle = @color_relerror;
  units = '[-]';
else
  cvec = [0:0.1:0.7];   
  color_handle = @color_Var;
  units = '[-]';
end

% for plot_4panels
vars_plot = { ...
  'tmbld_Hs_mF','tmbld_Hs_Fm', ... 
  'tmbld_Hs_mT','tmbld_Hs_Tm'};
models_plot = [];
annotate_text = { ...
  'with m'' then F''','with F'' then m''', ...
  'with m'' then T''','with T'' then m'''};
% ----------------------------------------------------------------------

%% Get data and plot it!

% computation command
regrs_cmd = [ ...
'[a_m,tmp1] = regrs(HsHs,mm);' ...
'b_mF = regrs(tmp1,FF);' ...
'b_mT = regrs(tmp1,TT);' ...
'[a_F,tmp2] = regrs(HsHs,FF);' ...
'b_Fm = regrs(tmp2,mm);' ...
]; % tmbld_Hs_Tm will use 'tm_param_full' params 

% error commands
cmd_err_mF = [ ...
'den = gamma_lw;' ...
'x = xmonth(1./den).*(' ...
'  FF - L*EE' ...
'- xmonth(a_m).*mm - xmonth(b_mF).*FF' ...
'- xiUxiU - Flu0Flu0);' ...
];

cmd_err_Fm = [ ...
'den = gamma_lw;' ...
'x = xmonth(1./den).*(' ...
'  FF - L*EE' ...
'- xmonth(a_F).*FF - xmonth(b_Fm).*mm' ...
'- xiUxiU - Flu0Flu0);' ...
];

cmd_err_mT = [ ...
'den = gamma_lw+b_mT;' ...
'x = xmonth(1./den).*(' ...
'  FF - L*EE' ...
'- xmonth(a_m).*mm' ...
'- xiUxiU - Flu0Flu0);' ...
];

cmd_err_Tm = [ ...
'den = gamma-gamma_G;' ...
'x = xmonth(1./den).*(' ...
'  FF - L*EE' ...
'- xmonth(-L*nu_Hs).*mm' ...
'- xiUxiU - Flu0Flu0);' ...
];

% full command to evaluate
if strcmp(name,'Hs_tmbld')
full_cmd = [ ...
  'gamma = [];' ...
  'beta = [];' ...
  'alpha = [];' ...
  ,regrs_cmd, ...
  'tm_param_full;' ...
  ,cmd_err_mF, ...
  'tmbld_Hs_mF = sqmean(anomaly_Var(x)./Var_T);' ...
  ,cmd_err_Fm, ...
  'tmbld_Hs_Fm = sqmean(anomaly_Var(x)./Var_T);' ...
  ,cmd_err_mT, ...
  'tmbld_Hs_mT = sqmean(anomaly_Var(x)./Var_T);' ...
  ,cmd_err_Tm, ...
  'tmbld_Hs_Tm = sqmean(anomaly_Var(x)./Var_T);' ...
];
else
full_cmd = [ ...
  'gamma = [];' ...
  'beta = [];' ...
  'alpha = [];' ...
  ,regrs_cmd, ...
  'tm_param_full;' ...
  ,cmd_err_mF, ...
  'Den = sqrt(sqmean(Var_T));' ...
  'tmbld_Hs_mF = rms(x,TT)./Den;' ...
  ,cmd_err_Fm, ...
  'tmbld_Hs_Fm = rms(x,TT)./Den;' ...
  ,cmd_err_mT, ...
  'tmbld_Hs_mT = rms(x,TT)./Den;' ...
  ,cmd_err_Tm, ...
  'tmbld_Hs_Tm = rms(x,TT)./Den;' ...
];
end

if opt_plot_all_datasets

  % Loop through all the datasets (no computationally efficient)
  vars_req = [];
  models_startup = {'ccsm3','ncep_doe','hadgem1','era40'};
  Nmodel_startup = length(models_startup);

  for i_model=1:Nmodel_startup

    next_model_name = models_startup{i_model};
    startup_other;
    eval(full_cmd);
    plot_4panels;
  
    if strcmp(out_format,'eps')
      out_format = 'png';
      plot_4panels;
      out_format = 'eps';
    end

  end
 
else

  % just $dataset1, optimized with switch_dataset.sh

  % Check if $model_name matches $dataset1
  if ~strcmp(model_name,dataset1)
    
    vars_req = [];
    next_model_name = dataset1;
    startup_other;
    eval(full_cmd);

  else

    % Check if $vars_plot exist, plot with plot_4panels.
    if ~all(ismember(vars_plot,who))  
      eval(full_cmd);
    end

  end

  plot_4panels;
  
end
% ----------------------------------------------------------------------
